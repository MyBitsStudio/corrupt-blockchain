package io.mybits.network;

import org.jetbrains.annotations.Nullable;

import java.math.BigInteger;
import java.security.KeyFactory;
import java.security.PrivateKey;
import java.security.PublicKey;
import java.security.spec.RSAPrivateKeySpec;
import java.security.spec.RSAPublicKeySpec;

public class NetworkConstants {

    public static PrivateKey privateKey;
    public static PublicKey publicKey;

    public static String VALID_HOST = "";

    public static final String RSA_PUB_MOD = "26745649337183522936140983118491615357902963042762760512633525371178616311744381608586987059657097962539974445136175346458916649847784002633454648858356567623979951097604864390024014207078458013634896974827423696615470111783496403735000795924831125624307964238951562271158285949820627985939848320766761860603689675701129032540159752519545181498192588089542590015265783129060954383931706708652467117705443680525818868832983535702596187035051362996109826691895154498985374347207791932496711033893919388282841184672608274152972625655929134962717275468946069381703630955713457027196904276238285015992613239007291469707359";
    public static final String RSA_PUB_EXP = "65537";
    public static final String RSA_PRI_MOD = "26745649337183522936140983118491615357902963042762760512633525371178616311744381608586987059657097962539974445136175346458916649847784002633454648858356567623979951097604864390024014207078458013634896974827423696615470111783496403735000795924831125624307964238951562271158285949820627985939848320766761860603689675701129032540159752519545181498192588089542590015265783129060954383931706708652467117705443680525818868832983535702596187035051362996109826691895154498985374347207791932496711033893919388282841184672608274152972625655929134962717275468946069381703630955713457027196904276238285015992613239007291469707359";
    public static final String RSA_PRI_EXP = "9051861927207518355815418405781516920914394491203433320879318697765038056405484783698729976604425917544561136157330016206600862901090575864188791659715547678161760613400440889923671317272742694530247529642181840834634402160822771610604470055246910629262291542213789568570828104887261227125727538318311205107235300796307420998121291600753791058933439869844393307768621271082428180640772995907587717502899601165765714817404227562409381019190610977288898173488263260401078675881780062203544034772630495056133232266357465633198909627173232633049295343949037588607233638300948605292827884264353364734268650734350669494629";

    public static void initKeys(){
        privateKey = getPrivateKey(RSA_PRI_MOD, RSA_PRI_EXP);
        publicKey = getPublicKey(RSA_PUB_MOD, RSA_PUB_EXP);
    }

    public static @Nullable PublicKey getPublicKey(String modulusStr, String exponentStr) {
        try {
            BigInteger modulus = new BigInteger(modulusStr);
            BigInteger exponent = new BigInteger(exponentStr);
            RSAPublicKeySpec publicKeySpec = new RSAPublicKeySpec(modulus, exponent);
            KeyFactory keyFactory = KeyFactory.getInstance("RSA");
            return keyFactory.generatePublic(publicKeySpec);
        } catch (Exception var6) {
            var6.printStackTrace();
            return null;
        }
    }

    public static @Nullable PrivateKey getPrivateKey(String modulusStr, String exponentStr) {
        try {
            BigInteger modulus = new BigInteger(modulusStr);
            BigInteger exponent = new BigInteger(exponentStr);
            RSAPrivateKeySpec privateKeySpec = new RSAPrivateKeySpec(modulus, exponent);
            KeyFactory keyFactory = KeyFactory.getInstance("RSA");
            return keyFactory.generatePrivate(privateKeySpec);
        } catch (Exception var6) {
            var6.printStackTrace();
            return null;
        }
    }
}
